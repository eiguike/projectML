% Machine Learning Project
% kNN

% loading database %
X = csvread("../result/bank_cleaned_preprocessed.csv");

% getting the final results %
Y = X(:,end);

% removing final results from database %
X = X(:,1:(end-1));

% loading tests %
%X_test = csvread("../input/bank.csv");

function [J, grad] = funcaoCusto(theta, X, y)
m = length(y); % numero de exemplos de treinamento
J = 0;
grad = zeros(size(theta));
hyp = sigmoid(X*theta);
J = (-y' * log(hyp) - (1 - y)' * log(1-hyp))/m;
grad = (X' *(hyp - y))./m;
end

function p = predicao(theta, X)
m = size(X, 1); % Numero de examplos de treinamento
p = zeros(m, 1);
p = (sigmoid(theta' * X') >= 0.5)';
end

function g = sigmoid(z)
g = zeros(size(z));
g = 1 ./ (1 + e .^ -z);
end

function p = predicao(theta, X)
m = size(X, 1); % Numero de examplos de treinamento
p = zeros(m, 1);
p = (sigmoid(theta' * X') >= 0.5)';
end

[m,n] = size(X);
X = [ones(m,1), X];
theta_inicial = zeros(n+1,1);

[custo, grad] = funcaoCusto(theta_inicial, X, Y);

opcoes = optimset('GradObj', 'on', 'MaxIter', 10000);

[theta, custo] = fminunc(@(t)(funcaoCusto(t, X, Y)), theta_inicial, opcoes);

p = predicao(theta, X);

fprintf('Acuracia na base de treinamento: %f\n', mean(double(p == Y)) * 100);

input_test = [35,1,1,2,1,0,0,4,0,312,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;50,1,1,3,1,1,0,4,0,353,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;39,4,0,3,0,0,0,4,0,195,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;30,10,1,4,0,0,0,4,0,38,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;55,1,1,1,1,0,0,4,0,262,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;55,5,0,4,1,0,0,4,0,342,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;41,9,0,4,1,0,0,4,0,181,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;37,0,1,4,1,0,0,4,0,172,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;35,9,1,5,0,1,0,4,0,99,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;39,6,1,3,0,0,0,4,0,233,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;54,9,0,5,0,0,0,4,0,255,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;54,4,1,1,1,0,0,4,0,230,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;54,1,2,1,0,0,0,4,0,208,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;34,7,1,4,0,0,0,4,0,365,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;52,9,1,3,1,0,0,4,0,1666,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;41,0,1,5,1,0,0,4,0,577,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;56,9,1,1,1,0,0,4,0,137,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;32,2,1,4,1,0,0,4,0,314,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;38,0,0,6,0,0,0,4,0,160,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;57,0,1,5,0,1,0,4,0,212,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;44,0,1,5,1,0,0,4,0,188,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,9,0,6,0,0,0,4,0,22,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;57,0,1,5,1,1,0,4,0,616,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;40,1,1,3,0,1,0,4,0,178,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;35,0,1,5,1,0,0,4,0,355,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;45,1,1,3,1,0,0,4,0,225,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;54,0,1,4,0,0,0,4,0,160,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;39,3,1,1,0,1,0,4,0,266,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;60,0,1,4,0,0,0,4,0,253,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;53,0,0,6,0,0,0,4,0,179,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;55,1,1,1,0,0,0,4,0,269,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;55,9,1,6,1,0,0,4,0,135,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;50,4,1,5,0,1,0,4,0,161,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;45,7,1,4,1,0,0,4,0,787,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;55,10,1,6,1,1,0,4,0,145,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;25,9,0,5,1,0,0,4,0,174,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;47,2,1,5,0,0,0,4,0,449,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;51,1,1,3,1,0,0,4,0,812,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,1,1,2,1,0,0,4,0,164,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,1,1,2,0,0,0,4,0,366,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;48,0,1,4,0,0,0,4,0,357,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;37,0,1,5,0,0,0,4,0,232,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;44,1,0,3,1,0,0,4,0,91,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;56,0,1,3,1,0,0,4,0,158,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;44,1,0,1,1,1,0,4,0,177,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;41,4,1,2,0,0,0,4,0,200,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;44,4,2,5,1,0,0,4,0,172,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;47,0,1,5,1,0,0,4,0,176,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;37,0,1,5,1,0,0,4,0,214,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;41,1,2,1,1,0,0,4,0,1575,1,999,0,0,1.1,93.994,-36.4,4.857,5191,1;55,9,1,5,0,0,0,4,0,349,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;33,7,1,4,1,0,0,4,0,337,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,1,1,3,0,0,0,4,0,208,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;50,1,1,1,1,0,0,4,0,193,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;38,0,1,4,0,0,0,4,0,165,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;49,2,1,5,1,0,0,4,0,1042,1,999,0,0,1.1,93.994,-36.4,4.857,5191,1;38,9,0,5,0,1,0,4,0,20,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;31,0,2,4,0,0,0,4,0,246,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;41,4,1,2,0,0,0,4,0,529,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;39,0,1,5,1,1,0,4,0,192,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;49,9,1,3,0,0,0,4,0,1467,1,999,0,0,1.1,93.994,-36.4,4.857,5191,1;34,0,1,4,1,0,0,4,0,188,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;35,0,1,5,1,0,0,4,0,180,2,999,0,0,1.1,93.994,-36.4,4.857,5191,0;33,10,1,3,0,0,0,4,0,545,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,1,1,2,0,1,0,4,0,583,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;45,7,1,6,1,0,0,4,0,221,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;42,4,1,5,0,0,0,4,0,426,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0;53,0,2,5,0,0,0,4,0,287,1,999,0,0,1.1,93.994,-36.4,4.857,5191,0];
for i = 1:45
  %input_test(i,:)
  y = predicao(theta, input_test(i,:))
endfor
